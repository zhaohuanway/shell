modules config

resource "aws_launch_configuration" "example" {
  image_id = "ami-0c55b159cbfafe1f0"
  instance_type = "t2.micro"

  user_data = <<-EOF
              #!/bin/bash
              echo "Hello,World" > index.html
              nohup busybox httpd -f -p ${var.server_port} &
              EOF
  security_groups = [aws_security_group.instance.id]
  lifecycle{
    create_before_destroy = true
 }
 # tags = {
 #   Name = "terraform-ec2"
 #}
}

resource "aws_security_group" "instance"{
  name = "terraform-example-instance"
  ingress {
    from_port = var.server_port
    to_port = var.server_port
    protocol= "TCP"
    cidr_blocks = ["0.0.0.0/0"]
 }
}

----------------------------------------------------------------
main.tf 
provider "aws" {
  region= "us-east-2"
}

resource "aws_instance" "ec2" {
  ami = "ami-0c55b159cbfafe1f0"
  instance_type = "t2.micro"

  user_data = <<-EOF
              #!/bin/bash
              echo "Hello,World" > index.html
              nohup busybox httpd -f -p ${var.server_port} &
              EOF
  vpc_security_group_ids = [aws_security_group.instance.id]
  tags = {
    Name = "terraform-ec2"
 }
}

resource "aws_security_group" "instance"{
  name = "terraform-example-instance"
  ingress {
    from_port = var.server_port
    to_port = var.server_port
    protocol= "TCP"
    cidr_blocks = ["0.0.0.0/0"]
 } 
}

--------------------------------------------
variables.tf
variable "server_port"{
  description = "the port is just for http request"
  type = number
  default = 8080
}

#output "public_ip" {
#  value = aws_instance.ec2.public_ip
#  description = "this output public_ip"

#}
Â© 2022 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
